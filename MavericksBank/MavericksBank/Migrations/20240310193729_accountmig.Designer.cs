// <auto-generated />
using System;
using MavericksBank.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MavericksBank.Migrations
{
    [DbContext(typeof(MavericksBankDb2Context))]
    [Migration("20240310193729_accountmig")]
    partial class accountmig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeAccountAssociation", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.HasKey("EmployeeId", "AccountId")
                        .HasName("PK__Employee__099995A99B46B9EC");

                    b.HasIndex("AccountId");

                    b.ToTable("EmployeeAccountAssociation", (string)null);
                });

            modelBuilder.Entity("EmployeeLoanAssociation", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<int>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("LoanID");

                    b.HasKey("EmployeeId", "LoanId")
                        .HasName("PK__Employee__1E25E2B2270169FA");

                    b.HasIndex("LoanId");

                    b.ToTable("EmployeeLoanAssociation", (string)null);
                });

            modelBuilder.Entity("MavericksBank.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("AccountType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<string>("IFSCCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IFSCCode");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AccountId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("MavericksBank.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Username");

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("MavericksBank.Models.BranchDetails", b =>
                {
                    b.Property<string>("IFSCCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("IFSCCode");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BranchName");

                    b.HasKey("IFSCCode");

                    b.ToTable("BranchDetails");
                });

            modelBuilder.Entity("MavericksBank.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.HasIndex(new[] { "Username" }, "UQ__Customer__536C85E420292607")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("MavericksBank.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.HasIndex(new[] { "Username" }, "UQ__Employee__536C85E4A9EDE3A7")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("MavericksBank.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DisbursementDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("InterestRate")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoanStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoanType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Tenure")
                        .HasColumnType("int");

                    b.HasKey("LoanId");

                    b.HasIndex("AccountId");

                    b.ToTable("Loan", (string)null);
                });

            modelBuilder.Entity("MavericksBank.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransactionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RecieverAccountId")
                        .HasColumnType("int")
                        .HasColumnName("RecieverAccountID");

                    b.Property<int?>("SenderAccountId")
                        .HasColumnType("int")
                        .HasColumnName("SenderAccountID");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransactionId");

                    b.HasIndex("RecieverAccountId");

                    b.HasIndex("SenderAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("EmployeeAccountAssociation", b =>
                {
                    b.HasOne("MavericksBank.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeA__Accou__4D94879B");

                    b.HasOne("MavericksBank.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeA__Emplo__4CA06362");
                });

            modelBuilder.Entity("EmployeeLoanAssociation", b =>
                {
                    b.HasOne("MavericksBank.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeL__Emplo__5070F446");

                    b.HasOne("MavericksBank.Models.Loan", null)
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeL__LoanI__5165187F");
                });

            modelBuilder.Entity("MavericksBank.Models.Account", b =>
                {
                    b.HasOne("MavericksBank.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Account__Custome__3A81B327");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MavericksBank.Models.Loan", b =>
                {
                    b.HasOne("MavericksBank.Models.Account", "Account")
                        .WithMany("Loans")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Loan__AccountID__46E78A0C");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MavericksBank.Models.Transaction", b =>
                {
                    b.HasOne("MavericksBank.Models.Account", "RecieverAccount")
                        .WithMany("TransactionRecieverAccounts")
                        .HasForeignKey("RecieverAccountId")
                        .HasConstraintName("FK__Transacti__Recie__440B1D61");

                    b.HasOne("MavericksBank.Models.Account", "SenderAccount")
                        .WithMany("TransactionSenderAccounts")
                        .HasForeignKey("SenderAccountId")
                        .HasConstraintName("FK__Transacti__Sende__4316F928");

                    b.Navigation("RecieverAccount");

                    b.Navigation("SenderAccount");
                });

            modelBuilder.Entity("MavericksBank.Models.Account", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("TransactionRecieverAccounts");

                    b.Navigation("TransactionSenderAccounts");
                });

            modelBuilder.Entity("MavericksBank.Models.Customer", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
